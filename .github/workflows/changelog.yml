name: Generate and Update Changelog

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published, edited]

jobs:
  changelog:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Get current tag and previous tag
        id: tags
        run: |
          echo "current_tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          echo "previous_tag=$(git describe --tags --abbrev=0 HEAD^)" >> $GITHUB_OUTPUT

      - name: Generate changelog block
        run: |
          TAG=${{ steps.tags.outputs.current_tag }}
          PREV=${{ steps.tags.outputs.previous_tag }}
          DATE=$(date +%Y-%m-%d)
          REPO="${{ github.repository }}"

          echo "## [$TAG] ($DATE)" > NEW_BLOCK.md
          echo "" >> NEW_BLOCK.md

          git log $PREV..$TAG --pretty=format:"- %s" >> NEW_BLOCK.md
          echo "" >> NEW_BLOCK.md
          echo "[View release](https://github.com/$REPO/releases/tag/$TAG)" >> NEW_BLOCK.md
          echo "" >> NEW_BLOCK.md

          # Автоссылки
          sed -i -E "s/#([0-9]+)/[#\1](https:\/\/github.com\/$REPO\/pull\/\1)/g" NEW_BLOCK.md
          sed -i -E "s/@([a-zA-Z0-9_-]+)/[@\1](https:\/\/github.com\/\1)/g" NEW_BLOCK.md

      - name: Rebuild full CHANGELOG.md
        run: |
          TAG=${{ steps.tags.outputs.current_tag }}
          TMP=CHANGELOG.tmp

          echo "# Changelog" > $TMP
          echo "" >> $TMP
          cat NEW_BLOCK.md >> $TMP

          if [ -f CHANGELOG.md ]; then
            awk -v tag="## [$TAG]" '
              BEGIN { skip=0 }
              $0 ~ tag { skip=1; next }
              skip && /^## \[/ { skip=0 }
              !skip { print }
            ' CHANGELOG.md >> $TMP
          fi

          mv $TMP CHANGELOG.md
          rm -f NEW_BLOCK.md

      - name: Commit and push CHANGELOG.md
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG for ${{ steps.tags.outputs.current_tag }}"
          git push

      - name: Create or update GitHub Release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${{ steps.tags.outputs.current_tag }}
          BODY=$(awk 'BEGIN{p=0} /^## \[/{if(p++) exit} p' CHANGELOG.md)
          gh release view "$TAG" > /dev/null 2>&1 && \
            gh release edit "$TAG" --notes "$BODY" || \
            gh release create "$TAG" --title "$TAG" --notes "$BODY"
